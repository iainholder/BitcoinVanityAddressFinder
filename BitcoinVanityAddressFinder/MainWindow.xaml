<Window x:Class="BitcoinVanityAddressFinder.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:converters="clr-namespace:BitcoinVanityAddressFinder.Converters"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        Title="Bitcoin Vanity Address Finder"
        Width="800"
        Height="360"
        Background="#222222"
        DataContext="{Binding VanityAddressViewModel, Source={StaticResource Locator}}"
        FontFamily="Tahoma"
        FontSize="18"
        ResizeMode="NoResize"
        mc:Ignorable="d">
  <Window.Resources>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converters:BooleanInverterConverter x:Key="BooleanInverterConverter" />
    <converters:BooleanToInvertedVisibilityConverter x:Key="BooleanToInvertedVisibilityConverter" />
    <Style TargetType="Label">
      <Setter Property="Margin" Value="0,0,4,0" />
      <Setter Property="HorizontalAlignment" Value="Right" />
      <Setter Property="VerticalAlignment" Value="Center" />
      <Setter Property="Foreground" Value="White" />
    </Style>
    <Style TargetType="TextBox">
      <Setter Property="HorizontalAlignment" Value="Left" />
      <Setter Property="VerticalAlignment" Value="Center" />
      <Setter Property="Height" Value="22" />
      <Setter Property="IsReadOnly" Value="True" />
      <Style.Triggers>
        <Trigger Property="Validation.HasError" Value="true">
          <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}" />
        </Trigger>
      </Style.Triggers>
    </Style>
    <Style TargetType="CheckBox">
      <Setter Property="Margin" Value="10,10,20,10" />
      <Setter Property="VerticalAlignment" Value="Center" />
      <Setter Property="Foreground" Value="White" />
      <Setter Property="IsEnabled" Value="{Binding IsSearching, Converter={StaticResource BooleanInverterConverter}}" />
    </Style>
  </Window.Resources>
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="200" />
      <ColumnDefinition />
      <ColumnDefinition Width="180" />
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition />
      <RowDefinition />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>
    <!--  Begin Mode Selector  -->
    <Label Grid.Row="0"
           Grid.Column="0"
           Content="Mode:" />
    <ComboBox Grid.Row="0"
              Grid.Column="1"
              Width="400"
              Height="30"
              Margin="0,4,0,2"
              HorizontalAlignment="Left"
              IsEnabled="{Binding IsSearching, Converter={StaticResource BooleanInverterConverter}}"
              ItemsSource="{Binding ModeComboBoxItems}"
              SelectedItem="{Binding ModeComboBoxSelectedItem}" />
    <!--  End Mode Selector  -->
    <!--  Begin Vanity Text  -->
    <Label Grid.Row="1"
           Grid.Column="0"
           Content="Vanity Text:"
           Visibility="{Binding IsStringSearchMode, Converter={StaticResource BooleanToVisibilityConverter}}" />
    <TextBox Grid.Row="1"
             Grid.Column="1"
             Width="400"
             Height="30"
             Margin="0,4,0,2"
             IsReadOnly="{Binding IsSearching}"
             Text="{Binding VanityText, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
             Visibility="{Binding IsStringSearchMode, Converter={StaticResource BooleanToVisibilityConverter}}" />
    <!--  End Vanity Text  -->
    <!--  Begin Dictionary Search  -->
    <Label Grid.Row="1"
           Grid.Column="0"
           Content="Min Word Length:"
           Visibility="{Binding IsStringSearchMode, Converter={StaticResource BooleanToInvertedVisibilityConverter}}" />
    <ComboBox Grid.Row="1"
              Grid.Column="1"
              Width="400"
              Height="30"
              Margin="0,4,0,2"
              HorizontalAlignment="Left"
              IsEnabled="{Binding IsSearching, Converter={StaticResource BooleanInverterConverter}}"
              ItemsSource="{Binding DictionaryLengthComboBoxItems}"
              SelectedItem="{Binding DictionaryLengthComboBoxSelectedItem}"
              Visibility="{Binding IsStringSearchMode, Converter={StaticResource BooleanToInvertedVisibilityConverter}}">
      <ComboBox.ItemTemplate>
        <DataTemplate>
          <Label Margin="0"
                 Padding="0"
                 Content="{Binding}"
                 ContentStringFormat="{}{0} letters"
                 Foreground="Black" />
        </DataTemplate>
      </ComboBox.ItemTemplate>
    </ComboBox>
    <!--  End Dictionary Search  -->
    <!--  Begin Address  -->
    <Label Grid.Row="2"
           Grid.Column="0"
           Content="Address:" />
    <TextBox Grid.Row="2"
             Grid.Column="1"
             Width="400"
             Height="30"
             Margin="0,4,0,2"
             Text="{Binding Address, FallbackValue='1CCGFQWaExLhs7aRF4RfYB3CTrouserAaP'}" />
    <!--  End Address  -->
    <!--  Begin Private Key  -->
    <Label Grid.Row="3"
           Grid.Column="0"
           Content="Private Key:" />
    <TextBox Grid.Row="3"
             Grid.Column="1"
             Grid.ColumnSpan="2"
             Width="600"
             Height="30"
             Margin="0,4,10,2"
             Text="{Binding PrivateKey, FallbackValue='L1wbKXkArGtdAZKiRjz52NyHVrSxH9eMgQ3FixEf2Vz4yitvGeu6'}" />
    <!--  End Private Key  -->
    <!--  Begin Keys Searched  -->
    <GroupBox Grid.Row="1"
              Grid.RowSpan="2"
              Grid.Column="2"
              Margin="0,0,10,2"
              Foreground="White"
              Header="Keys searched">
      <Label HorizontalAlignment="Center"
             Content="{Binding AttemptCount, FallbackValue=123456789}"
             FontFamily="Consolas"
             FontSize="24"
             FontWeight="Bold" />
    </GroupBox>
    <!--  End Keys Searched  -->
    <!--  Begin Options  -->
    <GroupBox Grid.Row="4"
              Grid.Column="1"
              Grid.ColumnSpan="2"
              Margin="0,0,10,0"
              Foreground="White"
              Header="Options">
      <StackPanel Orientation="Horizontal">
        <CheckBox Content="Case Sensitive" IsChecked="{Binding IsCaseSensitive}" />
        <CheckBox Content="Starts With" IsChecked="{Binding IsStartsWith}" />
        <CheckBox Content="Ends With" IsChecked="{Binding IsEndsWith}" />
      </StackPanel>
    </GroupBox>
    <!--  End Options  -->
    <!--  Begin Settings and Buttons  -->
    <StackPanel Grid.Row="5"
                Grid.Column="0"
                Grid.ColumnSpan="3"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Orientation="Horizontal">
      <Label Content="Network:" />
      <ComboBox Width="100"
                Height="30"
                Margin="0,10,10,10"
                IsEnabled="{Binding IsSearching, Converter={StaticResource BooleanInverterConverter}}"
                ItemsSource="{Binding NetworkComboBoxItems}"
                SelectedItem="{Binding NetworkComboBoxSelectedItem}" />
      <Label Content="Cores:" />
      <ComboBox Width="50"
                Height="30"
                Margin="0,10,10,10"
                IsEnabled="{Binding IsSearching, Converter={StaticResource BooleanInverterConverter}}"
                ItemsSource="{Binding CoreComboBoxItems}"
                SelectedItem="{Binding CoreComboBoxSelectedItem}" />
      <CheckBox Margin="10"
                VerticalAlignment="Center"
                Content="Beep"
                IsChecked="{Binding IsBeep}"
                IsEnabled="True" />
      <!--  Begin Buttons  -->
      <Button Width="100"
              Height="30"
              Command="{Binding SearchCommand}"
              Content="Search"
              IsDefault="True" />
      <Button Width="100"
              Height="30"
              Margin="10"
              Command="{Binding CancelCommand}"
              Content="Cancel"
              IsCancel="True" />
      <!--  End Buttons  -->
    </StackPanel>
    <!--  End Settings and Buttons  -->
    <!--  Begin Status Bar  -->
    <StackPanel Grid.Row="6"
                Grid.Column="0"
                Grid.ColumnSpan="3">
      <StatusBar Height="40" VerticalAlignment="Bottom">
        <StatusBarItem>
          <Label Content="{Binding StatusText, FallbackValue='Status here'}" Foreground="Black" />
        </StatusBarItem>
        <StatusBarItem HorizontalAlignment="Right">
          <ProgressBar Width="205"
                       Height="20"
                       Margin="0,0,8,0"
                       HorizontalAlignment="Right"
                       IsIndeterminate="True"
                       Orientation="Horizontal"
                       Visibility="{Binding IsSearching, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </StatusBarItem>
      </StatusBar>
    </StackPanel>
    <!--  End Status Bar  -->
    <!--  Begin Logo  -->
    <Image Grid.Row="4"
           Grid.RowSpan="2"
           Grid.Column="0"
           Margin="0,0,0,0"
           Source="bitcoin-logo.png"
           Stretch="None">
      <Image.RenderTransform>
        <RotateTransform CenterX="40" CenterY="40" />
      </Image.RenderTransform>
      <Image.Style>
        <Style>
          <Style.Triggers>
            <DataTrigger Binding="{Binding IsSearching}" Value="True">
              <DataTrigger.EnterActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation RepeatBehavior="Forever"
                                     Storyboard.TargetProperty="RenderTransform.Angle"
                                     From="0"
                                     To="360"
                                     Duration="0:0:2" />
                  </Storyboard>
                </BeginStoryboard>
              </DataTrigger.EnterActions>
              <DataTrigger.ExitActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation RepeatBehavior="Forever"
                                     Storyboard.TargetProperty="RenderTransform.Angle"
                                     From="0"
                                     To="0"
                                     Duration="0" />
                  </Storyboard>
                </BeginStoryboard>
              </DataTrigger.ExitActions>
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </Image.Style>
    </Image>
    <!--  End Logo  -->
  </Grid>
</Window>